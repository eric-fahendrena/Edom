!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=t(e,!0):t(e)}("undefined"!=typeof window?window:this,(function(e,t){const r={create:e=>Array.isArray(e)?e.map((e=>document.createElement(e))):document.createElement(e),find:e=>document.getElementById(e),select:e=>document.querySelector(e),selectAll:e=>document.querySelectorAll(e),addAttr:e=>t=>{Object.entries(t).forEach((t=>e.setAttribute(t[0],t[1])))},addCSS:e=>t=>{Object.entries(t).forEach((t=>e.style[t[0]]=t[1]))},getCSS:e=>t=>e.style[t],getComputedCSS:t=>r=>e.getComputedStyle(t).getPropertyValue(r),addClass:e=>t=>{Array.isArray(t)?t.forEach((t=>e.classList.add(t))):e.classList.add(t)},removeClass:e=>t=>{Array.isArray(t)?t.forEach((t=>e.classList.remove(t))):e.classList.remove(t)},toggleClass:e=>t=>{e.classList.toggle(t)},containsClass:e=>t=>e.classList.contains(t),write:e=>t=>{Array.isArray(e)?e.forEach((e=>{e.innerText=t})):e.innerText=t},setHTML:e=>t=>e.innerHTML=t,addHTML:e=>t=>e.innerHTML+=t,append:e=>t=>{if(Array.isArray(e)){t.appendChild(e[0]);let r=e[0];for(let t=1;t<e.length;t++)r.after(e[t]),r=e[t]}else t.appendChild(e)},rotate:e=>t=>{r.addCSS(e)({transform:`rotate(${t}deg)`})},loadScript:e=>{const t=r.create("script");r.addAttr(t)({src:e}),r.append(t)(document.body)},addEvent:e=>t=>n=>{"string"==typeof e?r.select(e).addEventListener(t,n):e.addEventListener(t,n)},removeEvent:e=>t=>n=>{"string"==typeof e?r.select(e).removeEventListener(t,n):e.removeEventListener(t,n)},insertBefore:e=>t=>{e.parentNode.insertBefore(t,e)},insertAfter:e=>t=>{e.parentNode.insertBefore(t,e.nextSibling)},applyAnimation:e=>t=>{r.addCSS(e)({animationName:t.name,animationDuration:t.duration,animationTimingFunction:t.timingFunction})},ajaxGet:e=>t=>{const r=new XMLHttpRequest;r.open("GET",e,!0),r.onreadystatechange=()=>{4===r.readyState&&200===r.status&&t(r.responseText)},r.send()},fetchGet:e=>fetch(e).then((e=>e.json())).catch((e=>console.error("Error:",e))),serializeForm:e=>{const t=new FormData(e),r={};return t.forEach(((e,t)=>{r[t]=e})),r},multiply:e=>t=>{let r=e;for(let n=0;n<t;n++){const t=e.cloneNode(!0);r.after(t),r=t}}};return t||(e.edom=r),r}));
//# sourceMappingURL=edom.min.js.map